upstream gogs {
  server <%= @gogs_host %>:<%= @gogs_port %>;
}

<% if @https %>
server {
  listen 80;

  server_name <%= @server_name %>;

  location / {
    return 301 https://<%= @server_name %>$request_uri;
  }
}
<% end %>

server {
  <% if @https %>
  listen 443 ssl http2;
  <% else %>
  listen 80;
  <% end %>
  server_name <%= @server_name %>;

  <% if @https %>
  <% if @scts %>
  ssl_ct on;
  <% end %>

  ssl_certificate <%= @rsa_certificate %>;
  ssl_certificate_key <%= @rsa_certificate_key %>;
  <% if @scts %>
  ssl_ct_static_scts <%= @scts_rsa_dir %>;
  <% end %>

  <% if @ec_certificate && @ec_certificate_key %>
  ssl_certificate <%= @ec_certificate %>;
  ssl_certificate_key <%= @ec_certificate_key %>;
  <% if @scts %>
  ssl_ct_static_scts <%= @scts_ec_dir %>;
  <% end %>
  <% end %>

  add_header Strict-Transport-Security 'max-age=<%= @hsts_max_age %>' always;
  add_header X-Frame-Options DENY always;

  <% if @oscp_stapling %>
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 8.8.8.8 8.8.4.4 valid=300s;
  <% end %>

  <% if @hpkp && @hpkp_pins.size > 0 %>
  add_header Public-Key-Pins '<%= @hpkp_pins.map{ |pin| "pin-sha256=\"#{pin}\"" }.join '; ' %>; max-age=<%= @hpkp_max_age %>;' always;
  <% end %>
  <% end %>

  charset utf-8;
  access_log <%= @access_log %> combined;
  error_log <%= @error_log %> error;

  proxy_set_header Host $http_host;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Forwarded-For $remote_addr;
  proxy_redirect off;

  proxy_read_timeout 30s;
  proxy_send_timeout 30s;
  send_timeout 60s;
  resolver_timeout 5s;
  client_body_timeout 60s;

  client_max_body_size 100m;
  client_body_buffer_size 4m;

  location / {
    proxy_pass http://gogs/;
  }
}
